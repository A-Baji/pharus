version: "v0.0.0"
LabBook: null
Test: "hello world"
SciViz: # top level tab
  auth:
    mode: database # reuse from DJ LabBook
  pages: # individual pages
    page2:
      route: /session1 # dev, be careful of name collisions
      args:
        - subject_name
        - session_number
      hidden: true
      grids:
        grid1:
          type: fixed
          components:
            insert:
              route: /insert
              x: 1
              y: 2
              height: 1
              width: 1
              type: form
              tables:
                - test_group1_simple.TableB
                - test_group1_simple.TableC
              map: # optional, default to tables order and DB definitions. If provided, all must be specified
                - type: attribute
                  input: B Id
                  destination: b_id
                - type: attribute
                  input: B Number
                  destination: b_number
                - type: table # order here respected in response/UI
                  input: Table A
                  destination: test_group1_simple.TableA
                  map: # these are only primary keys
                    - type: attribute
                      input: A Id
                      destination: a_id
                - type: attribute
                  input: C Id
                  destination: c_id
                - type: attribute #omitted input means display is session_note
                  destination: c_name
            insert2:
              route: /insert2
              x: 1
              y: 2
              height: 1
              width: 1
              type: form
              tables:
                - test_group1_simple.TableB
                - test_group1_simple.TableC
              map: # optional, default to tables order and DB definitions. If provided, all must be specified
                - type: attribute
                  input: B Id
                  destination: b_id
                - type: attribute
                  input: B Number
                  destination: b_number
                - type: table # order here respected in response/UI
                  input: Table A
                  destination: test_group1_simple.TableA
                - type: attribute
                  input: C Id
                  destination: c_id
                - type: attribute #omitted input means display is session_note
                  destination: c_name
            insert3:
              route: /insert3
              x: 1
              y: 2
              height: 1
              width: 1
              type: form
              tables:
                - "{group}_simple.TableB"
                - "{group}_simple.TableC"
            insert4:
              route: /insert4
              x: 1
              y: 2
              height: 1
              width: 1
              type: form
              tables:
                - test_group2_simple.DiffTableB
                - test_group1_simple.TableC
            insert5:
              route: /insert5
              x: 1
              y: 2
              height: 1
              width: 1
              type: form
              tables:
                - test_group1_simple.TableB
                - test_group2_simple.DiffTableB
            insert6:
              route: /insert6
              x: 1
              y: 2
              height: 1
              width: 1
              type: form
              tables:
                - test_group3_simple.TableY
                - test_group4_simple.DiffTableY
            insert7:
              route: /insert7
              x: 1
              y: 2
              height: 1
              width: 1
              type: form
              tables:
                - test_group4_simple.TableW
            insert8:
              route: /insert8
              x: 1
              y: 2
              height: 1
              width: 1
              type: form
              tables:
                - test_group1_simple.TableB
                - test_group2_simple.DiffTableB
                - test_group1_simple.TableC
                - test_group3_simple.TableY
                - test_group4_simple.DiffTableY
                - test_group4_simple.TableW
            component1:
              route: /query1
              row_span: 0
              column_span: 0
              type: table
              restriction: >
                def restriction(**kwargs):
                    return dict(**kwargs)
              dj_query: >
                def dj_query(test_group1_simple):
                    TableA, TableB = (test_group1_simple.TableA, test_group1_simple.TableB)
                    q = TableA * TableB
                    f = []
                    return dict(query=q, fetch_args=f)
        grid2:
          type: fixed
          components:
            component1:
              route: /query2
              row_span: 0
              column_span: 0
              type: table
              restriction: >
                def restriction(**kwargs):
                    return dict(**kwargs)
              dj_query: >
                def dj_query(test_group1_simple):
                    TableA, TableB = (test_group1_simple.TableA, test_group1_simple.TableB)
                    q = TableA * TableB
                    f = []
                    return dict(query=q, fetch_args=f)

    page1:
      route: /session2 # dev, be careful of name collisions
      args:
        - subject_name
        - session_number
      hidden: true
      grids:
        grid1:
          type: fixed
          max_component_per_page: 20
          rows: 1
          columns: 3
          components:
            component1:
              route: /query3
              row_span: 0
              column_span: 0
              type: table
              restriction: >
                def restriction(**kwargs):
                    return dict(**kwargs)
              dj_query: >
                def dj_query(test_group1_simple):
                    TableA, TableB = (test_group1_simple.TableA, test_group1_simple.TableB)
                    q = TableA * TableB
                    f = []
                    return dict(query=q, fetch_args=f)
            component2:
              route: /query4
              row_span: 0
              column_span: 1
              type: table
              restriction: >
                def restriction(**kwargs):
                    return dict(**kwargs)
              dj_query: >
                def dj_query(test_group1_simple):
                    TableA, TableB = (test_group1_simple.TableA, test_group1_simple.TableB)
                    q = TableA * TableB
                    f = []
                    return dict(query=q, fetch_args=f)
              diff_checker: >
                def diff_checker(**args):
                    return TrainingStatsPlotly.proj(hash='trial_mean_hash')
            component3:
              route: /query5
              row_span: 0
              column_span: 1
              type: table
              restriction: >
                def restriction(**kwargs):
                    return dict(a_id=0, **kwargs)
              dj_query: >
                def dj_query(test_group1_simple):
                    TableA, TableB = (test_group1_simple.TableA, test_group1_simple.TableB)
                    q = TableA * TableB
                    f = []
                    return dict(query=q, fetch_args=f)
              diff_checker: >
                def diff_checker(**args):
                    return TrainingStatsPlotly.proj(hash='trial_mean_hash')
            plot_test:
              route: /plot1
              type: plot:plotly:stored_json
              x: 0
              y: 0
              height: 1
              width: 1
              restriction: >
                def restriction(**kwargs):
                    return dict(**kwargs, p_id=2)
              dj_query: >
                def dj_query(test_group1_simple):
                    PlotlyTable = test_group1_simple.PlotlyTable
                    return dict(query=PlotlyTable(), fetch_args=['plot'])
            deleteserver:
              route: /deleteserver
              x: 1
              y: 1
              height: 1
              width: 1
              type: delete
              url: "codebook_endpoint/hub/api/users/username/server"
