# PHARUS_VERSION=$(cat pharus/version.py | tail -1 | awk -F\' '{print $2}') HOST_UID=$(id -u) docker-compose -f docker-compose-test.yaml up --exit-code-from pharus
# Note: If requirements or Dockerfile change, will need to add --build flag
version: "2.4"
x-net: &net
  networks:
      - main
services:
  db:
    <<: *net
    image: datajoint/mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=simple
  # changelog-linter:
  #   image: node:10-alpine
  #   volumes:
  #     - ./CHANGELOG.md:/main/CHANGELOG.md:ro
  #   working_dir: /main
  #   command:
  #     - sh
  #     - -c
  #     - |
  #       npm i -g @brightcove/kacl
  #       cat > package.json <<-EOF
  #       {
  #         "name": "example",
  #         "version": "0.0.0",
  #         "repository": {
  #           "type": "git",
  #           "url": "https://github.com/org/repo"
  #         }
  #       }
  #       EOF
  #       kacl lint && tail -f /dev/null
  pharus:
    <<: *net
    extends:
      file: ./docker-compose-build.yaml
      service: pharus
    environment:
      - FLASK_ENV=development # enables logging to console from Flask
      - TEST_DB_SERVER=db
      - TEST_DB_USER=root
      - TEST_DB_PASS=simple
      - AS_SCRIPT
    volumes:
      - ./requirements_test.txt:/tmp/pip_requirements.txt
      - ./pharus:/opt/conda/lib/python3.8/site-packages/pharus
    command:
      - sh
      - -c
      - |
        if [ ! -z "$${AS_SCRIPT}" ]; then
          set -e
          echo "------ SYNTAX TESTS ------"
          PKG_DIR=/opt/conda/lib/python3.8/site-packages/pharus
          flake8 $${PKG_DIR} --count --select=E9,F63,F7,F82 --show-source --statistics
          echo "------ UNIT TESTS ------"
          pytest -sv --cov-report term-missing --cov=$${PKG_DIR} /main/tests
          echo "------ STYLE TESTS ------"
          flake8 $${PKG_DIR} --count --max-complexity=20 --max-line-length=95 --statistics
        else
          echo "=== Running ==="
          echo "Please see 'LNX-docker-compose.yaml' for detail on running tests."
          tail -f /dev/null
        fi
    depends_on:
      # changelog-linter:
      #   condition: service_started
      db:
        condition: service_healthy
networks:
  main:
